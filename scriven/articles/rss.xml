<?xml version="1.0"?>
<!-- RSS generated by fargo.io on Tue, 13 Jan 2015 21:42:29 GMT -->
<rss version="2.0" xmlns:source="http://source.smallpict.com/2014/07/12/theSourceNamespace.html">
	<channel>
		<title>Articles</title>
		<pubDate>Tue, 13 Jan 2015 21:42:25 GMT</pubDate>
		<lastBuildDate>Tue, 13 Jan 2015 21:42:29 GMT</lastBuildDate>
		<language>en-us</language>
		<generator>Fargo v1.68</generator>
		<docs>http://cyber.law.harvard.edu/rss/rss.html</docs>
		<webMaster>chrisdadswell@gmail.com</webMaster>
		<source:account service="twitter">@chrisdadswell</source:account>
		<item>
			<title>How-To: Fargo Self-Hosted Publishing - Hosting the fargoPublisher</title>
			<link>undefined.html</link>
			<description>
				&lt;p&gt;&lt;a href=&quot;https://twitter.com/share?text=How-To%3A%20Fargo%20Self-Hosted%20Publishing&amp;amp;url=http://scriven.chrisdadswell.co.uk/users/scriven/2014/06/19/fargoSelfPublishingPart2&quot; target=&quot;_blank&quot;&gt;Tweet This Post&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Introduction&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;This post is being written on my self hosted Fargo published site. It has taken  me some time to work out how this is done and I'd like to give back to the community by showing you how I managed it. It's not all there yet, but for the most part it works and it has been a very interesting journey. &lt;/p&gt;

&lt;p&gt;I've been following Fargo for about a year now and have found it an extremely captivating way to edit and post content. I've used all the popular &quot;blogging platforms&quot; out there, although I freely admit I don't post up content as much as I'd like. I've also been following Dave Winer for longer than this and find him a very inspiring character to learn a great deal from. I also like that he is very attentive to those that follow him on the &lt;a href=&quot;http://fargo.io/docs/support.html&quot;&gt;groups &lt;/a&gt;and nearly always responds. Not too shabby!&lt;/p&gt;

&lt;p&gt;I've been ingesting RSS for longer than I can remember and it was only really a year or so ago, when Google Reader disappeared, that I took an active interest in what RSS was really about and what can be achieved with it and where it is going.&lt;/p&gt;

&lt;p&gt;I love the Fargo platform and it's been a joy to watch it progress and finally get it working on a self hosted platform. As Dave has so kindly allowed it to be used. &lt;/p&gt;

&lt;p&gt;I've read a lot of material to get to this point and I'm also quite fortunate that my day job and experience has helped a great deal in the process. But I hope the following will help all those wanting to achieve the same aim of self hosting a Fargo blog.&lt;/p&gt;

&lt;p&gt;&quot;Enough of this&quot; I hear you say, let us move onto the good stuff. &lt;img title=':bomb:' alt=':bomb:' class='emoji' src='http://fargo.io/code/emojify/images/emoji/bomb.png' align='absmiddle' /&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;fargoPublisher and fargoPublisherSetup on GitHub&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/scripting/fargoPublisher&quot;&gt;fargoPublisher on GitHub&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/chrisdadswell/fargoPublisherSetup&quot;&gt;fargoPublisherSetup on Github&lt;/a&gt;&lt;/b&gt; &lt;em&gt;updated 2014/09/01&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Technical Overview&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropbox.com/s/fchscw6zgloty5m/Fargo%20Architecture.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Setting up AWS&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;It goes without saying that you need an &lt;a href=&quot;http://aws.amazon.com/&quot;&gt;Amazon AWS account&lt;/a&gt; (free for 12 months)&lt;/p&gt;

&lt;p&gt;Log into the AWS console and create a &lt;a href=&quot;https://console.aws.amazon.com/iam/home?region=eu-west-1#users&quot;&gt;new user&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As part of the creation of a new user you will be able to get the Access Key ID and Secret Access Key these are needed for the fargoPublisher later on so please keep a note of them&lt;/p&gt;

&lt;p&gt;Create an S3 bucket (US Default) to hold the static files that the Fargo publisher will produce. I called mine &quot;&lt;i&gt;scriven.chrisdadswell.co.uk&lt;/i&gt;&quot;&lt;/p&gt;

&lt;p&gt;You now need to enable &quot;&lt;i&gt;website hosting&lt;/i&gt;&quot; for this bucket&lt;/p&gt;

&lt;p&gt;Click on the bucket and select the &quot;Properties&quot; button on the top right. &lt;/p&gt;

&lt;p&gt;Click the radio button to enable website hosting&lt;/p&gt;

&lt;p&gt;Enter &quot;&lt;i&gt;Index.html&lt;/i&gt;&quot; in the Index Document field&lt;/p&gt;

&lt;p&gt;Save&lt;/p&gt;

&lt;p&gt;Make a note of the &quot;endpoint&quot; url above or copy to notepad. This will also be needed later&lt;/p&gt;

&lt;p&gt;Finally, set-up a bucket policy. This is needed for access write access to the bucket.&lt;/p&gt;

&lt;p&gt;Read the &quot;Granting Read-Only Permission to an Anonymous User&quot; section on this &lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html&quot;&gt;here&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;AWS setup is now complete&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Setting up DNS (CloudFlare)&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;My DNS is managed at CloudFlare, I have a free account. Your DNS management may vary.&lt;/p&gt;

&lt;p&gt;Create an &quot;A&quot; record for the fargoPublisher host, I called my &quot;A&quot; record &quot;pub&quot; and entered the public IP address to the host. It has to be an IP address for this type of record.&lt;/p&gt;

&lt;p&gt;Next, create a  &quot;CNAME&quot; record that points to the S3 bucket URI. I called my &quot;scriven&quot;. This bucket that holds all the Fargo user and stats data. This DNS record points to the S3 bucket endpoint we recorded above in the AWS console.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Setting up the Linux server&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I am running fargoPublisher on a Debian 7 VM that I purchased outright from CloudAtCost.com for $38 and comes with a fixed IP &lt;img title=':smiley:' alt=':smiley:' class='emoji' src='http://fargo.io/code/emojify/images/emoji/smiley.png' align='absmiddle' /&gt;&lt;/p&gt;

&lt;p&gt;Login into your system as the root user&lt;/p&gt;

&lt;p&gt;Prerequisite software to install as root:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;apt-get install sudo git curl&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Create a new user for Fargo (optional username). I'm using &quot;&lt;i&gt;fargo&lt;/i&gt;&quot;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;useradd -G sudo -d /home/fargo -m -s /bin/bash fargo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;passwd fargo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;chown -R fargo:user /home/fargo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;usermod -G sudo fargo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager&quot;&gt;Build&lt;/a&gt; Node.js from source (Source: Joyent on GitHub) - The build process takes a little while. Why not go grab a drinky and a bit to eat &lt;img title=':cake:' alt=':cake:' class='emoji' src='http://fargo.io/code/emojify/images/emoji/cake.png' align='absmiddle' /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;apt-get install python g++ make checkinstall fakeroot&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src=$(mktemp -d) &amp;amp;&amp;amp; cd $src&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;wget -N http://nodejs.org/dist/node-latest.tar.gz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tar xzvf node-latest.tar.gz &amp;amp;&amp;amp; cd node-v*&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;./configure&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;fakeroot checkinstall -y --install=no --pkgversion $(echo $(pwd) | sed -n -re's/.+node-v(.+)$/\1/p') make -j$(($(nproc)+1)) install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo dpkg -i node_*&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;Install &lt;b&gt;N&lt;/b&gt;ode &lt;b&gt;P&lt;/b&gt;ackage &lt;b&gt;M&lt;/b&gt;anager or npm&lt;/p&gt;

&lt;p&gt;&lt;code&gt;curl https://www.npmjs.org/install.sh | sudo sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Test node is installed by returning a version&lt;/p&gt;

&lt;p&gt;&lt;code&gt;node -v&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Switch to the fargo user to install the required npm modules&lt;/p&gt;

&lt;p&gt;&lt;code&gt;su - fargo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install fargoPublisher node pre-requisites&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo npm install aws-sdk url request&lt;/p&gt;

&lt;p&gt;sudo npm install forever -g&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Install and configure fargoPublisher&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Read the &lt;a href=&quot;https://github.com/scripting/fargoPublisher/blob/master/README.md&quot;&gt;fargoPublisher README&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clone the fargoPublisher into the fargo users home directory&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git clone https://github.com/scripting/fargoPublisher.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Subsequent updates can be retrieved by running the following from within the fargoPublisher directory&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git pull origin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We will now set-up the required export variables. I did this in my fargo users &lt;code&gt;&lt;i&gt;.profile&lt;/i&gt;&lt;/code&gt; file so that the variables get exported when the fargo user logs onto the system. The &lt;code&gt;.profile&lt;/code&gt; file is a hidden file within the fargo users home directory&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd ~&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo nano .profile&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;NOTE: My server also runs other web services, so I have chosen not to run it on the standard port of 80, but on 8080 as you will see later. &lt;/p&gt;

&lt;p&gt;Paste the following and change with your values for AWS keys, domain names and port&lt;/p&gt;

&lt;p&gt;&lt;code&gt;## AWS IAM fargo user keys&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;export AWS_ACCESS_KEY_ID=&lt;ACCESS KEY ID&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;export AWS_SECRET_ACCESS_KEY=&lt;SECRET ACCESS KEY&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;## Exporting variables for fargoPublisher&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;&lt;code&gt;export fpHostingPath=/scriven.chrisdadswell.co.uk/users/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;export fpDataPath=/scriven.chrisdadswell.co.uk/data/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;export fpDomain=chrisdadswell.co.uk&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;export fpServerPort=8080&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;export fpRedirect=false&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;CTRL O and CTRL X to save and quit&lt;/p&gt;

&lt;p&gt;Source the &lt;code&gt;.profile&lt;/code&gt; to export the variables. This essentially runs the &lt;code&gt;.profile&lt;/code&gt; as if we'd logged in&lt;/p&gt;

&lt;p&gt;&lt;code&gt;source .profile&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Test the fargoPublisher runs and watch the output. When the fargoPublisher is running you will see the variables that were exported on screen and it will appear to be doing nothing.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd fargoPublisher &amp;amp;&amp;amp; node publisher.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This should return by showing the variables set and sit stationary without a prompt in the running state&lt;/p&gt;

&lt;p&gt;Keep the SSH session open for now.&lt;/p&gt;

&lt;p&gt;Fire up a browser and test that the publisher is responding. Obviously change the domain and port below to that of the one you have set-up.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;http://&lt;publisher url&gt;:8080/version&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This should return &quot;0.96&quot; in the body of the page. This proves the publisher is responding and ready to go. &lt;img title=':thumbsup:' alt=':thumbsup:' class='emoji' src='http://fargo.io/code/emojify/images/emoji/thumbsup.png' align='absmiddle' /&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Testing fargoPublisher&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Head over to &lt;a href=&quot;http://fargo.io&quot;&gt;Fargo.io&lt;/a&gt; in your browser. As mentioned above I found it useful at this stage to keep the SSH session open to your Debian server that is currently running the fargoPublisher. &lt;/p&gt;

&lt;p&gt;NOTE: We will run the publisher in the background using &quot;forever&quot; once testing is complete.&lt;/p&gt;

&lt;p&gt;Create  a new outline and name it &quot;testing1&quot; for the sake of this test. You can delete it from Dropbox once we are done testing&lt;/p&gt;

&lt;p&gt;Click the &quot;+&quot; icon on the left and make an entry&lt;/p&gt;

&lt;p&gt;Next we will change the CMS publisher server address&lt;/p&gt;

&lt;p&gt;Go to the Fargo &quot;Settings...&quot; This can be found by clicking your name on the far right of the title bar in Fargo.&lt;/p&gt;

&lt;p&gt;Click the CMS tab and enter the publisher server details. Change the domain and port to match your details. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;http://pub.chrisdadswell.co.uk:8080&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This is to tell Fargo that &lt;i&gt;your&lt;/i&gt; publisher will be publishing files and not the default publisher over at &quot;pub.fargo.io&quot;&lt;/p&gt;

&lt;p&gt;Give that a few ticks to save off and update in the background before continuing&lt;/p&gt;

&lt;p&gt;Next we will publically name the outline, this is the point where will see if the publisher and everything else we have setup is working!&lt;/p&gt;

&lt;p&gt;Make the SSH session visible that is running the publisher. It will show debug information as we start to type an outline name. &lt;/p&gt;

&lt;p&gt;Make sure the &quot;&lt;i&gt;testing1&lt;/i&gt;&quot; outline is selected then&lt;/p&gt;

&lt;p&gt;File | Name outline...&lt;/p&gt;

&lt;p&gt;Enter &quot;&lt;i&gt;testing1&lt;/i&gt;&quot; - Note that you will see the publisher updating as you enter each letter. If you don't see any output it would suggest something isn't quite working &lt;img title=':thumbsdown:' alt=':thumbsdown:' class='emoji' src='http://fargo.io/code/emojify/images/emoji/thumbsdown.png' align='absmiddle' /&gt;&lt;/p&gt;

&lt;p&gt;Press OK to confirm the public outline name. If all went well Fargo will report that the public outline naming has been successful.&lt;/p&gt;

&lt;p&gt;Now we want to render the pages.&lt;/p&gt;

&lt;p&gt;File | Render All Pages...&lt;/p&gt;

&lt;p&gt;Give Fargo a few seconds to render the pages into the bucket. :lightbulb: Tip: If you are doing all this from a PC and have Dropbox installed with notifications set, you will see when Fargo is publishing.&lt;/p&gt;

&lt;p&gt;We are now at a point where we have a public outline that has been published by your fargoPublisher and its static content rendered to your S3 bucket. :child: :hi5: :child:&lt;/p&gt;

&lt;p&gt;As you would of read above, fargoPublisher has a concept of users. These are in actual effect the names of the outlines you create. If you log into your S3 account and look at the bucket you are using you will see &quot;&lt;i&gt;data&lt;/i&gt;&quot; and &quot;&lt;i&gt;users&lt;/i&gt;&quot; folders. &lt;/p&gt;

&lt;p&gt;Inside the &quot;&lt;i&gt;users&lt;/i&gt;&quot; folder you will see a &quot;&lt;i&gt;testing1&lt;/i&gt;&quot; user with the static contents that the fargoPublisher rendered. Neat hey.&lt;/p&gt;

&lt;p&gt;To get access to the pages in your browser go to http://yourdomain/users/testing1&lt;/p&gt;

&lt;p&gt;And there you have it, a self published and static hosted blog!&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Backgrounding the fargoPublisher&lt;/b&gt; &lt;/p&gt;

&lt;p&gt;Up to this point we have been running the fargoPublisher in the foreground. This means terminating the process or logging off will terminate the fargoPublisher.&lt;/p&gt;

&lt;p&gt;To address this we can run the publisher in the background using an npm module called &quot;&lt;i&gt;forever&lt;/i&gt;&quot;. This essentially runs the node as a service that is controllable and creates logs.&lt;/p&gt;

&lt;p&gt;To do this is very straight-forward as I will show below. First we need to terminate the fargoPublisher&lt;/p&gt;

&lt;p&gt;&lt;code&gt;CTRL c&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;From within the fargoPublisher directory, run the following command&lt;/p&gt;

&lt;p&gt;&lt;code&gt;forever start publisher.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will start the publisher and you will see some output and be returned to the command line. At this point fargoPublisher is running in the background.&lt;/p&gt;

&lt;p&gt;If at any point you want to stop the publisher, do the following&lt;/p&gt;

&lt;p&gt;&lt;code&gt;forever stopall&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;&lt;code&gt;forever stop publisher.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In the next section I will demonstrate how to run the fargoPublisher at start-up. This is needed if the server is needing to be rebooted at any time.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Running fargoPublisher at boot&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Again, this is a really simple config on the server side. I use the &quot;&lt;i&gt;crontab&lt;/i&gt;&quot; to start the fargoPublisher at boot&lt;/p&gt;

&lt;p&gt;&lt;code&gt;crontab -e&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Scroll down to an empty line and paste the following&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@reboot /usr/local/bin/forever start /usr/local/bin/node /home/fargo/fargoPublisher/publisher.js&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;CTRL o then CTRL x (for nano)&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;ESC wq &lt;for vi&gt;&lt;/p&gt;

&lt;p&gt;Running the following will show the cron job&lt;/p&gt;

&lt;p&gt;&lt;code&gt;crontab -l&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;On a system reboot now the fargoPublisher will startup without any intervention required. &lt;/p&gt;

&lt;p&gt;One final thing, to list what node processes you have running with forever, type&lt;/p&gt;

&lt;p&gt;&lt;code&gt;forever list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Fin!&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Removing Fargo Users&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Coming soon ...&lt;/p&gt;

&lt;p&gt;&lt;b&gt;What I haven't been able to work out&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I haven't quite worked out what is happening with domains for user accounts (see the &quot;&lt;a href=&quot;http://fargo.io/docs/contentManagement/runningYourOwnServer.html&quot;&gt;remaining loose-ends&lt;/a&gt;&quot;). Dave manages to allow users to go to say &quot;scriven.smallpict.com&quot; and the content is generated. At the moment I have to hard code the entry point to the content under /users/scriven within the &quot;Outline Settings&quot;. E.g., http://scriven.chrisdadswell.co.uk/users/scriven.&lt;/p&gt;

&lt;p&gt;Ideally I'd want content to be delivered from http://scriven.chrisdadswell.co.uk&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Credits&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Dave Winer for giving us Fargo and River and for his endless enthusiasm, insight and RSS!&lt;/p&gt;

&lt;p&gt;Frank McPherson for spotting some missives in my article&lt;/p&gt;

&lt;p&gt;Ben and Cogs.com for his feedback&lt;/p&gt;

&lt;p&gt;The people on the smallpict Google groups&lt;/p&gt;
				</description>
			<source:outline text="How-To: Fargo Self-Hosted Publishing - Hosting the fargoPublisher" created="Tue, 17 Jun 2014 11:56:04 GMT" name="howToSelfPublishingFargoBlog" type="outline" >
				<source:outline text="Tweet This Post" created="Fri, 20 Jun 2014 11:55:15 GMT" type="link" url="https://twitter.com/share?text=How-To%3A%20Fargo%20Self-Hosted%20Publishing&amp;url=http://scriven.chrisdadswell.co.uk/users/scriven/2014/06/19/fargoSelfPublishingPart2" icon="twitter" name="tweetThisPost" />
				<source:outline text="&lt;b&gt;Introduction&lt;/b&gt;" created="Thu, 19 Jun 2014 17:57:36 GMT" >
					<source:outline text="This post is being written on my self hosted Fargo published site. It has taken  me some time to work out how this is done and I'd like to give back to the community by showing you how I managed it. It's not all there yet, but for the most part it works and it has been a very interesting journey. " created="Thu, 19 Jun 2014 17:57:38 GMT" />
					<source:outline text="I've been following Fargo for about a year now and have found it an extremely captivating way to edit and post content. I've used all the popular &quot;blogging platforms&quot; out there, although I freely admit I don't post up content as much as I'd like. I've also been following Dave Winer for longer than this and find him a very inspiring character to learn a great deal from. I also like that he is very attentive to those that follow him on the &lt;a href=&quot;http://fargo.io/docs/support.html&quot;&gt;groups &lt;/a&gt;and nearly always responds. Not too shabby!" created="Thu, 19 Jun 2014 18:00:59 GMT" />
					<source:outline text="I've been ingesting RSS for longer than I can remember and it was only really a year or so ago, when Google Reader disappeared, that I took an active interest in what RSS was really about and what can be achieved with it and where it is going." created="Thu, 19 Jun 2014 18:04:43 GMT" />
					<source:outline text="I love the Fargo platform and it's been a joy to watch it progress and finally get it working on a self hosted platform. As Dave has so kindly allowed it to be used. " created="Thu, 19 Jun 2014 18:08:16 GMT" />
					<source:outline text="I've read a lot of material to get to this point and I'm also quite fortunate that my day job and experience has helped a great deal in the process. But I hope the following will help all those wanting to achieve the same aim of self hosting a Fargo blog." created="Thu, 19 Jun 2014 18:20:13 GMT" />
					<source:outline text="&quot;Enough of this&quot; I hear you say, let us move onto the good stuff. :bomb:" created="Thu, 19 Jun 2014 18:06:50 GMT" />
					</source:outline>
				<source:outline text="&lt;b&gt;fargoPublisher and fargoPublisherSetup on GitHub&lt;/b&gt;" created="Mon, 01 Sep 2014 19:41:28 GMT" >
					<source:outline text="&lt;b&gt;&lt;a href=&quot;https://github.com/scripting/fargoPublisher&quot;&gt;fargoPublisher on GitHub&lt;/a&gt;&lt;/b&gt;" created="Thu, 10 Jul 2014 11:38:50 GMT" />
					<source:outline text="&lt;b&gt;&lt;a href=&quot;https://github.com/chrisdadswell/fargoPublisherSetup&quot;&gt;fargoPublisherSetup on Github&lt;/a&gt;&lt;/b&gt; *updated 2014/09/01*" created="Sat, 30 Aug 2014 18:25:40 GMT" >
						<source:outline text="" created="Sat, 30 Aug 2014 18:26:47 GMT" />
						</source:outline>
					</source:outline>
				<source:outline text="&lt;b&gt;Technical Overview&lt;/b&gt;" created="Tue, 24 Jun 2014 11:44:17 GMT" >
					<source:outline text="&lt;img src=&quot;https://dl.dropbox.com/s/fchscw6zgloty5m/Fargo%20Architecture.png&quot;&gt;" created="Tue, 24 Jun 2014 11:44:22 GMT" />
					</source:outline>
				<source:outline text="&lt;b&gt;Setting up AWS&lt;/b&gt;" created="Tue, 17 Jun 2014 11:56:12 GMT" >
					<source:outline text="It goes without saying that you need an &lt;a href=&quot;http://aws.amazon.com/&quot;&gt;Amazon AWS account&lt;/a&gt; (free for 12 months)" created="Thu, 19 Jun 2014 18:14:18 GMT" />
					<source:outline text="Log into the AWS console and create a &lt;a href=&quot;https://console.aws.amazon.com/iam/home?region=eu-west-1#users&quot;&gt;new user&lt;/a&gt;" created="Thu, 19 Jun 2014 18:44:32 GMT" />
					<source:outline text="As part of the creation of a new user you will be able to get the Access Key ID and Secret Access Key these are needed for the fargoPublisher later on so please keep a note of them" created="Thu, 19 Jun 2014 20:08:29 GMT" />
					<source:outline text="Create an S3 bucket (US Default) to hold the static files that the Fargo publisher will produce. I called mine &quot;&lt;i&gt;scriven.chrisdadswell.co.uk&lt;/i&gt;&quot;" created="Tue, 17 Jun 2014 11:56:31 GMT" />
					<source:outline text="You now need to enable &quot;&lt;i&gt;website hosting&lt;/i&gt;&quot; for this bucket" created="Thu, 19 Jun 2014 18:43:56 GMT" >
						<source:outline text="Click on the bucket and select the &quot;Properties&quot; button on the top right. " created="Thu, 19 Jun 2014 18:46:30 GMT" />
						<source:outline text="Click the radio button to enable website hosting" created="Thu, 19 Jun 2014 18:46:38 GMT" />
						<source:outline text="Enter &quot;&lt;i&gt;Index.html&lt;/i&gt;&quot; in the Index Document field" created="Thu, 19 Jun 2014 18:46:55 GMT" />
						<source:outline text="Save" created="Thu, 19 Jun 2014 18:47:11 GMT" />
						<source:outline text="Make a note of the &quot;endpoint&quot; url above or copy to notepad. This will also be needed later" created="Thu, 19 Jun 2014 18:51:07 GMT" />
						</source:outline>
					<source:outline text="Finally, set-up a bucket policy. This is needed for access write access to the bucket." created="Thu, 19 Jun 2014 18:46:03 GMT" >
						<source:outline text="Read the &quot;Granting Read-Only Permission to an Anonymous User&quot; section on this &lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html&quot;&gt;here&lt;/a&gt; " created="Thu, 19 Jun 2014 18:48:33 GMT" />
						</source:outline>
					<source:outline text="AWS setup is now complete" created="Thu, 19 Jun 2014 18:50:24 GMT" />
					</source:outline>
				<source:outline text="&lt;b&gt;Setting up DNS (CloudFlare)&lt;/b&gt;" created="Tue, 17 Jun 2014 12:00:38 GMT" >
					<source:outline text="My DNS is managed at CloudFlare, I have a free account. Your DNS management may vary." created="Thu, 19 Jun 2014 18:16:17 GMT" />
					<source:outline text="Create an &quot;A&quot; record for the fargoPublisher host, I called my &quot;A&quot; record &quot;pub&quot; and entered the public IP address to the host. It has to be an IP address for this type of record." created="Tue, 17 Jun 2014 12:00:48 GMT" />
					<source:outline text="Next, create a  &quot;CNAME&quot; record that points to the S3 bucket URI. I called my &quot;scriven&quot;. This bucket that holds all the Fargo user and stats data. This DNS record points to the S3 bucket endpoint we recorded above in the AWS console." created="Tue, 17 Jun 2014 12:01:39 GMT" />
					</source:outline>
				<source:outline text="&lt;b&gt;Setting up the Linux server&lt;/b&gt;" created="Sun, 29 Jun 2014 21:03:21 GMT" >
					<source:outline text="I am running fargoPublisher on a Debian 7 VM that I purchased outright from CloudAtCost.com for $38 and comes with a fixed IP :smiley:" created="Thu, 19 Jun 2014 17:49:50 GMT" />
					<source:outline text="Login into your system as the root user" created="Sun, 29 Jun 2014 21:31:50 GMT" />
					<source:outline text="Prerequisite software to install as root:" created="Sun, 29 Jun 2014 21:09:17 GMT" >
						<source:outline text="&lt;code&gt;apt-get install sudo git curl&lt;/code&gt;" created="Sun, 29 Jun 2014 21:10:20 GMT" />
						</source:outline>
					<source:outline text="Create a new user for Fargo (optional username). I'm using &quot;&lt;i&gt;fargo&lt;/i&gt;&quot;" created="Thu, 19 Jun 2014 17:51:44 GMT" >
						<source:outline text="&lt;code&gt;useradd -G sudo -d /home/fargo -m -s /bin/bash fargo&lt;/code&gt;" created="Tue, 17 Jun 2014 21:15:53 GMT" />
						<source:outline text="&lt;code&gt;passwd fargo&lt;/code&gt;" created="Fri, 04 Jul 2014 19:52:41 GMT" />
						<source:outline text="&lt;code&gt;chown -R fargo:user /home/fargo&lt;/code&gt;" created="Fri, 04 Jul 2014 19:53:10 GMT" />
						<source:outline text="&lt;code&gt;usermod -G sudo fargo&lt;/code&gt;" created="Mon, 30 Jun 2014 16:01:58 GMT" />
						</source:outline>
					<source:outline text="&lt;a href=&quot;https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager&quot;&gt;Build&lt;/a&gt; Node.js from source (Source: Joyent on GitHub) - The build process takes a little while. Why not go grab a drinky and a bit to eat :cake:" created="Tue, 17 Jun 2014 20:40:35 GMT" >
						<source:outline text="&lt;code&gt;apt-get install python g++ make checkinstall fakeroot&lt;/code&gt;" />
						<source:outline text="&lt;code&gt;src=$(mktemp -d) &amp;&amp; cd $src&lt;/code&gt;" />
						<source:outline text="&lt;code&gt;wget -N http://nodejs.org/dist/node-latest.tar.gz&lt;/code&gt;" created="Thu, 19 Jun 2014 15:15:44 GMT" />
						<source:outline text="&lt;code&gt;tar xzvf node-latest.tar.gz &amp;&amp; cd node-v*&lt;/code&gt;" created="Thu, 19 Jun 2014 15:15:20 GMT" />
						<source:outline text="&lt;code&gt;./configure&lt;/code&gt;" />
						<source:outline text="&lt;code&gt;fakeroot checkinstall -y --install=no --pkgversion $(echo $(pwd) | sed -n -re's/.+node-v(.+)$/\1/p') make -j$(($(nproc)+1)) install&lt;/code&gt;" created="Thu, 19 Jun 2014 17:39:02 GMT" />
						<source:outline text="&lt;code&gt;sudo dpkg -i node_*&lt;/code&gt; " created="Thu, 17 Jul 2014 06:09:13 GMT" />
						</source:outline>
					<source:outline text="Install &lt;b&gt;N&lt;/b&gt;ode &lt;b&gt;P&lt;/b&gt;ackage &lt;b&gt;M&lt;/b&gt;anager or npm" created="Tue, 17 Jun 2014 20:57:53 GMT" >
						<source:outline text="`curl https://www.npmjs.org/install.sh | sudo sh`" created="Tue, 17 Jun 2014 20:57:58 GMT" />
						</source:outline>
					<source:outline text="Test node is installed by returning a version" created="Tue, 17 Jun 2014 20:59:25 GMT" >
						<source:outline text="`node -v`" created="Tue, 17 Jun 2014 21:05:48 GMT" />
						</source:outline>
					<source:outline text="Switch to the fargo user to install the required npm modules" created="Mon, 30 Jun 2014 13:09:41 GMT" >
						<source:outline text="`su - fargo`" created="Mon, 30 Jun 2014 13:10:01 GMT" />
						</source:outline>
					<source:outline text="Install fargoPublisher node pre-requisites" created="Tue, 17 Jun 2014 21:05:53 GMT" >
						<source:outline text="&lt;code&gt;sudo npm install aws-sdk url request" created="Tue, 17 Jun 2014 21:06:21 GMT" />
						<source:outline text="sudo npm install forever -g&lt;/code&gt;" created="Mon, 30 Jun 2014 18:35:09 GMT" />
						</source:outline>
					</source:outline>
				<source:outline text="&lt;b&gt;Install and configure fargoPublisher&lt;/b&gt;" created="Tue, 17 Jun 2014 12:02:20 GMT" >
					<source:outline text="Read the &lt;a href=&quot;https://github.com/scripting/fargoPublisher/blob/master/README.md&quot;&gt;fargoPublisher README&lt;/a&gt;" created="Sun, 29 Jun 2014 21:46:53 GMT" />
					<source:outline text="Clone the fargoPublisher into the fargo users home directory" created="Sun, 29 Jun 2014 21:45:38 GMT" >
						<source:outline text="&lt;code&gt;git clone https://github.com/scripting/fargoPublisher.git&lt;/code&gt;" created="Sun, 29 Jun 2014 21:46:15 GMT" />
						</source:outline>
					<source:outline text="Subsequent updates can be retrieved by running the following from within the fargoPublisher directory" created="Tue, 17 Jun 2014 21:09:02 GMT" >
						<source:outline text="&lt;code&gt;git pull origin&lt;/code&gt;" created="Tue, 17 Jun 2014 21:10:15 GMT" />
						</source:outline>
					<source:outline text="We will now set-up the required export variables. I did this in my fargo users &lt;code&gt;&lt;i&gt;.profile&lt;/i&gt;&lt;/code&gt; file so that the variables get exported when the fargo user logs onto the system. The &lt;code&gt;.profile&lt;/code&gt; file is a hidden file within the fargo users home directory" created="Tue, 17 Jun 2014 21:07:21 GMT" >
						<source:outline text="&lt;code&gt;cd ~&lt;/code&gt;" created="Tue, 17 Jun 2014 21:27:14 GMT" />
						<source:outline text="&lt;code&gt;sudo nano .profile&lt;/code&gt;" created="Tue, 17 Jun 2014 21:28:15 GMT" />
						</source:outline>
					<source:outline text="NOTE: My server also runs other web services, so I have chosen not to run it on the standard port of 80, but on 8080 as you will see later. " created="Thu, 19 Jun 2014 18:22:07 GMT" />
					<source:outline text="Paste the following and change with your values for AWS keys, domain names and port" created="Tue, 17 Jun 2014 21:28:51 GMT" >
						<source:outline text="&lt;code&gt;## AWS IAM fargo user keys&lt;/code&gt;" />
						<source:outline text="&lt;code&gt;export AWS_ACCESS_KEY_ID=&lt;ACCESS KEY ID&gt;&lt;/code&gt;" />
						<source:outline text="&lt;code&gt;export AWS_SECRET_ACCESS_KEY=&lt;SECRET ACCESS KEY&gt;&lt;/code&gt;" />
						<source:outline text="&lt;code&gt;## Exporting variables for fargoPublisher&lt;/code&gt; " />
						<source:outline text="&lt;code&gt;export fpHostingPath=/scriven.chrisdadswell.co.uk/users/&lt;/code&gt;" />
						<source:outline text="&lt;code&gt;export fpDataPath=/scriven.chrisdadswell.co.uk/data/&lt;/code&gt;" />
						<source:outline text="&lt;code&gt;export fpDomain=chrisdadswell.co.uk&lt;/code&gt;" />
						<source:outline text="&lt;code&gt;export fpServerPort=8080&lt;/code&gt;" />
						<source:outline text="&lt;code&gt;export fpRedirect=false&lt;/code&gt;" />
						</source:outline>
					<source:outline text="CTRL O and CTRL X to save and quit" created="Tue, 17 Jun 2014 21:31:46 GMT" />
					<source:outline text="Source the &lt;code&gt;.profile&lt;/code&gt; to export the variables. This essentially runs the &lt;code&gt;.profile&lt;/code&gt; as if we'd logged in" created="Tue, 17 Jun 2014 21:32:16 GMT" >
						<source:outline text="&lt;code&gt;source .profile&lt;/code&gt;" created="Tue, 17 Jun 2014 21:32:30 GMT" />
						</source:outline>
					<source:outline text="Test the fargoPublisher runs and watch the output. When the fargoPublisher is running you will see the variables that were exported on screen and it will appear to be doing nothing." created="Tue, 17 Jun 2014 21:33:29 GMT" >
						<source:outline text="&lt;code&gt;cd fargoPublisher &amp;&amp; node publisher.js&lt;/code&gt;" created="Tue, 17 Jun 2014 21:33:58 GMT" />
						</source:outline>
					<source:outline text="This should return by showing the variables set and sit stationary without a prompt in the running state" created="Tue, 17 Jun 2014 21:34:44 GMT" />
					<source:outline text="Keep the SSH session open for now." created="Tue, 17 Jun 2014 21:40:25 GMT" />
					<source:outline text="Fire up a browser and test that the publisher is responding. Obviously change the domain and port below to that of the one you have set-up." created="Tue, 17 Jun 2014 21:35:47 GMT" >
						<source:outline text="&lt;code&gt;http://&lt;publisher url&gt;:8080/version&lt;/code&gt;" created="Tue, 17 Jun 2014 21:36:05 GMT" />
						</source:outline>
					<source:outline text="This should return &quot;0.96&quot; in the body of the page. This proves the publisher is responding and ready to go. :thumbsup:" created="Tue, 17 Jun 2014 21:36:25 GMT" />
					</source:outline>
				<source:outline text="&lt;b&gt;Testing fargoPublisher&lt;/b&gt;" created="Sun, 29 Jun 2014 21:26:35 GMT" >
					<source:outline text="Head over to &lt;a href=&quot;http://fargo.io&quot;&gt;Fargo.io&lt;/a&gt; in your browser. As mentioned above I found it useful at this stage to keep the SSH session open to your Debian server that is currently running the fargoPublisher. " created="Tue, 17 Jun 2014 21:38:34 GMT" />
					<source:outline text="NOTE: We will run the publisher in the background using &quot;forever&quot; once testing is complete." created="Thu, 19 Jun 2014 18:26:57 GMT" />
					<source:outline text="Create  a new outline and name it &quot;testing1&quot; for the sake of this test. You can delete it from Dropbox once we are done testing" created="Tue, 17 Jun 2014 21:41:42 GMT" />
					<source:outline text="Click the &quot;+&quot; icon on the left and make an entry" created="Thu, 19 Jun 2014 18:31:32 GMT" />
					<source:outline text="Next we will change the CMS publisher server address" created="Tue, 17 Jun 2014 21:42:38 GMT" />
					<source:outline text="Go to the Fargo &quot;Settings...&quot; This can be found by clicking your name on the far right of the title bar in Fargo." created="Thu, 19 Jun 2014 18:32:31 GMT" />
					<source:outline text="Click the CMS tab and enter the publisher server details. Change the domain and port to match your details. " created="Tue, 17 Jun 2014 21:43:09 GMT" >
						<source:outline text="&lt;code&gt;http://pub.chrisdadswell.co.uk:8080&lt;/code&gt;" created="Tue, 17 Jun 2014 21:44:24 GMT" />
						</source:outline>
					<source:outline text="This is to tell Fargo that &lt;i&gt;your&lt;/i&gt; publisher will be publishing files and not the default publisher over at &quot;pub.fargo.io&quot;" created="Tue, 17 Jun 2014 21:58:13 GMT" />
					<source:outline text="Give that a few ticks to save off and update in the background before continuing" created="Tue, 17 Jun 2014 21:45:03 GMT" />
					<source:outline text="Next we will publically name the outline, this is the point where will see if the publisher and everything else we have setup is working!" created="Tue, 17 Jun 2014 21:45:31 GMT" />
					<source:outline text="Make the SSH session visible that is running the publisher. It will show debug information as we start to type an outline name. " created="Tue, 17 Jun 2014 21:58:58 GMT" />
					<source:outline text="Make sure the &quot;&lt;i&gt;testing1&lt;/i&gt;&quot; outline is selected then" created="Tue, 17 Jun 2014 21:56:48 GMT" >
						<source:outline text="File | Name outline..." created="Wed, 18 Jun 2014 06:05:44 GMT" />
						</source:outline>
					<source:outline text="Enter &quot;&lt;i&gt;testing1&lt;/i&gt;&quot; - Note that you will see the publisher updating as you enter each letter. If you don't see any output it would suggest something isn't quite working :thumbsdown:" created="Tue, 17 Jun 2014 22:00:51 GMT" />
					<source:outline text="Press OK to confirm the public outline name. If all went well Fargo will report that the public outline naming has been successful." created="Wed, 18 Jun 2014 06:02:40 GMT" />
					<source:outline text="Now we want to render the pages." created="Wed, 18 Jun 2014 06:03:43 GMT" >
						<source:outline text="File | Render All Pages..." created="Wed, 18 Jun 2014 06:04:56 GMT" />
						</source:outline>
					<source:outline text="Give Fargo a few seconds to render the pages into the bucket. :lightbulb: Tip: If you are doing all this from a PC and have Dropbox installed with notifications set, you will see when Fargo is publishing." created="Wed, 18 Jun 2014 06:05:56 GMT" />
					<source:outline text="We are now at a point where we have a public outline that has been published by your fargoPublisher and its static content rendered to your S3 bucket. :child: :hi5: :child:" created="Wed, 18 Jun 2014 06:07:17 GMT" />
					<source:outline text="As you would of read above, fargoPublisher has a concept of users. These are in actual effect the names of the outlines you create. If you log into your S3 account and look at the bucket you are using you will see &quot;&lt;i&gt;data&lt;/i&gt;&quot; and &quot;&lt;i&gt;users&lt;/i&gt;&quot; folders. " created="Wed, 18 Jun 2014 06:09:01 GMT" />
					<source:outline text="Inside the &quot;&lt;i&gt;users&lt;/i&gt;&quot; folder you will see a &quot;&lt;i&gt;testing1&lt;/i&gt;&quot; user with the static contents that the fargoPublisher rendered. Neat hey." created="Wed, 18 Jun 2014 06:11:52 GMT" />
					<source:outline text="To get access to the pages in your browser go to http://yourdomain/users/testing1" created="Thu, 19 Jun 2014 18:30:09 GMT" />
					<source:outline text="And there you have it, a self published and static hosted blog!" created="Wed, 18 Jun 2014 06:13:18 GMT" />
					<source:outline text="" created="Thu, 19 Jun 2014 18:40:12 GMT" />
					</source:outline>
				<source:outline text="&lt;b&gt;Backgrounding the fargoPublisher&lt;/b&gt; " created="Fri, 04 Jul 2014 20:06:25 GMT" >
					<source:outline text="Up to this point we have been running the fargoPublisher in the foreground. This means terminating the process or logging off will terminate the fargoPublisher." created="Fri, 04 Jul 2014 20:06:49 GMT" />
					<source:outline text="To address this we can run the publisher in the background using an npm module called &quot;&lt;i&gt;forever&lt;/i&gt;&quot;. This essentially runs the node as a service that is controllable and creates logs." created="Fri, 04 Jul 2014 20:07:51 GMT" />
					<source:outline text="To do this is very straight-forward as I will show below. First we need to terminate the fargoPublisher" created="Fri, 04 Jul 2014 20:09:00 GMT" >
						<source:outline text="&lt;code&gt;CTRL c&lt;/code&gt;" created="Fri, 04 Jul 2014 20:09:32 GMT" />
						</source:outline>
					<source:outline text="From within the fargoPublisher directory, run the following command" created="Fri, 04 Jul 2014 20:10:18 GMT" >
						<source:outline text="&lt;code&gt;forever start publisher.js&lt;/code&gt;" created="Fri, 04 Jul 2014 20:10:37 GMT" />
						</source:outline>
					<source:outline text="This will start the publisher and you will see some output and be returned to the command line. At this point fargoPublisher is running in the background." created="Fri, 04 Jul 2014 20:11:36 GMT" />
					<source:outline text="If at any point you want to stop the publisher, do the following" created="Fri, 04 Jul 2014 20:12:37 GMT" >
						<source:outline text="&lt;code&gt;forever stopall&lt;/code&gt;" created="Fri, 04 Jul 2014 20:14:07 GMT" />
						</source:outline>
					<source:outline text="or" created="Fri, 04 Jul 2014 20:14:20 GMT" >
						<source:outline text="&lt;code&gt;forever stop publisher.js&lt;/code&gt;" created="Fri, 04 Jul 2014 20:14:24 GMT" />
						</source:outline>
					<source:outline text="In the next section I will demonstrate how to run the fargoPublisher at start-up. This is needed if the server is needing to be rebooted at any time." created="Fri, 04 Jul 2014 20:14:43 GMT" />
					</source:outline>
				<source:outline text="&lt;b&gt;Running fargoPublisher at boot&lt;/b&gt;" created="Fri, 04 Jul 2014 20:16:02 GMT" >
					<source:outline text="Again, this is a really simple config on the server side. I use the &quot;&lt;i&gt;crontab&lt;/i&gt;&quot; to start the fargoPublisher at boot" created="Fri, 04 Jul 2014 20:16:20 GMT" >
						<source:outline text="&lt;code&gt;crontab -e&lt;/code&gt;" created="Fri, 04 Jul 2014 20:20:08 GMT" />
						</source:outline>
					<source:outline text="Scroll down to an empty line and paste the following" created="Fri, 04 Jul 2014 20:20:43 GMT" >
						<source:outline text="&lt;code&gt;@reboot /usr/local/bin/forever start /usr/local/bin/node /home/fargo/fargoPublisher/publisher.js&lt;/code&gt; " created="Fri, 04 Jul 2014 20:21:09 GMT" />
						</source:outline>
					<source:outline text="CTRL o then CTRL x (for nano)" created="Fri, 04 Jul 2014 20:23:52 GMT" />
					<source:outline text="or" created="Fri, 04 Jul 2014 20:25:39 GMT" />
					<source:outline text="ESC wq &lt;for vi&gt;" created="Fri, 04 Jul 2014 20:22:21 GMT" />
					<source:outline text="Running the following will show the cron job" created="Fri, 04 Jul 2014 20:24:27 GMT" >
						<source:outline text="&lt;code&gt;crontab -l&lt;/code&gt;" created="Fri, 04 Jul 2014 20:24:52 GMT" />
						</source:outline>
					<source:outline text="On a system reboot now the fargoPublisher will startup without any intervention required. " created="Fri, 04 Jul 2014 20:25:45 GMT" />
					<source:outline text="One final thing, to list what node processes you have running with forever, type" created="Fri, 04 Jul 2014 20:26:15 GMT" >
						<source:outline text="&lt;code&gt;forever list&lt;/code&gt;" created="Fri, 04 Jul 2014 20:26:39 GMT" />
						</source:outline>
					<source:outline text="Fin!" created="Fri, 04 Jul 2014 20:26:48 GMT" />
					</source:outline>
				<source:outline text="&lt;b&gt;Removing Fargo Users&lt;/b&gt;" created="Fri, 04 Jul 2014 21:17:26 GMT" >
					<source:outline text="Coming soon ..." created="Fri, 04 Jul 2014 21:17:43 GMT" />
					</source:outline>
				<source:outline text="&lt;b&gt;What I haven't been able to work out&lt;/b&gt;" created="Thu, 19 Jun 2014 18:33:55 GMT" >
					<source:outline text="I haven't quite worked out what is happening with domains for user accounts (see the &quot;&lt;a href=&quot;http://fargo.io/docs/contentManagement/runningYourOwnServer.html&quot;&gt;remaining loose-ends&lt;/a&gt;&quot;). Dave manages to allow users to go to say &quot;scriven.smallpict.com&quot; and the content is generated. At the moment I have to hard code the entry point to the content under /users/scriven within the &quot;Outline Settings&quot;. E.g., http://scriven.chrisdadswell.co.uk/users/scriven." created="Thu, 19 Jun 2014 18:32:52 GMT" />
					<source:outline text="Ideally I'd want content to be delivered from http://scriven.chrisdadswell.co.uk" created="Thu, 19 Jun 2014 18:39:31 GMT" />
					</source:outline>
				<source:outline text="&lt;b&gt;Credits&lt;/b&gt;" created="Thu, 19 Jun 2014 20:47:00 GMT" >
					<source:outline text="Dave Winer for giving us Fargo and River and for his endless enthusiasm, insight and RSS!" created="Thu, 19 Jun 2014 20:47:21 GMT" />
					<source:outline text="Frank McPherson for spotting some missives in my article" created="Thu, 17 Jul 2014 06:09:42 GMT" />
					<source:outline text="Ben and Cogs.com for his feedback" created="Thu, 17 Jul 2014 07:02:58 GMT" />
					<source:outline text="The people on the smallpict Google groups" created="Thu, 19 Jun 2014 20:47:58 GMT" />
					</source:outline>
				</source:outline>
			<pubDate>Tue, 17 Jun 2014 11:56:04 GMT</pubDate>
			<guid>undefined.html</guid>
			</item>
		</channel>
	</rss>
